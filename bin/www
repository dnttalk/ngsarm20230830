const app = require('../app');
const debug = require('debug')('nodejs-03:server');
const http = require('http');
const { exec } = require('child_process');
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
    const port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function openBrowser(url) {
    const command = `start ${url}`; // Update for different platforms
    console.log(`Executing command: ${command}`);
    exec(command);
}

function handleWebSocketConnection(ws) {
    console.log('WebSocket 连接已建立');

    ws.on('message', (message) => {
        if (message === 'close') {
            console.log('收到关闭消息，正在关闭服务器');
            gracefulShutdown();
        }
    });

    ws.on('close', () => {
        console.log('WebSocket 连接已关闭');
    });
}

async function gracefulShutdown() {
    console.log('收到退出信号，正在优雅地关闭。');
    // await closeWebSocketServer();
    await closeHttpServer();
    console.log('已成功关闭。');
    process.exit(0);
}

async function closeWebSocketServer() {
    return new Promise((resolve) => {
        wss.close(() => {
            console.log('WebSocket 服务器已关闭');
            resolve();
        });
    });
}

async function closeHttpServer() {
    return new Promise((resolve) => {
        server.close(() => {
            console.log('HTTP 服务器已关闭');
            resolve();
        });
    });
}

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
    debug('Listening on ' + bind);
    console.log(`Server running at http://localhost:${port}/`);
    const { platform } = require('os');
    const { exec } = require('child_process');
    const WINDOWS_PLATFORM = 'win32';
    const osPlatform = platform();
    let url = 'http://localhost:3000/login'
    let command;

    if (osPlatform === WINDOWS_PLATFORM) {
        command = `start chrome ${url} --kiosk --incognito --disable-pinch --overscroll-history-navigation=0`;
    }
    console.log(`executing command: ${command}`);

    exec(command);
}

process.on('exit', (code) => {
    console.log(`进程即将退出，退出码: ${code}`);
    gracefulShutdown();

});

